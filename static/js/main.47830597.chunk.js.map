{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","href","className","id","src","alt","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uOA8IeA,G,UA5IH,WACV,OACE,6BACE,6BACE,uBAAGC,KAAK,IAAIC,UAAU,aACpB,0BAAMA,UAAU,UAAhB,KADF,QAGE,0BAAMA,UAAU,UAAhB,OAEF,wBAAIA,UAAU,aACZ,4BACE,uBAAGD,KAAK,UAAR,KAEE,wCAFF,OAMF,4BACE,uBAAGA,KAAK,aAAR,KAEE,2CAFF,OAMF,4BACE,uBAAGA,KAAK,YAAR,KAEE,0CAFF,SAQN,8BAEE,6BAASE,GAAG,WACV,yBAAKD,UAAU,aACf,yBAAKA,UAAU,SACb,gDACA,6DACA,uBAAGA,UAAU,WAAb,yNAOF,uBAAGD,KAAK,SAASC,UAAU,sBACzB,yBACEE,IAAI,2GACJC,IAAI,GACJH,UAAU,uBAMhB,6BAASC,GAAG,SACV,yBAAKD,UAAU,aACb,yBAAKA,UAAU,mBACb,iCAEE,uCAFF,UAIA,yBAAKA,UAAU,cACb,8EACA,iXAQA,+lBAYA,uBAAGA,UAAU,UAAb,4CAGA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,yBACEE,IAAI,0EACJC,IAAI,gBAEN,uBAAGJ,KAAK,IAAR,WAEF,yBAAKC,UAAU,gBACb,yBACEE,IAAI,4EACJC,IAAI,kBAEN,uBACEJ,KAAK,yCACLK,OAAO,UAFT,aAOF,yBAAKJ,UAAU,cACb,yBACEE,IAAI,oEACJC,IAAI,KAEN,uBAAGJ,KAAK,6BAA6BK,OAAO,UAA5C,eAQV,uBAAGL,KAAK,YAAYC,UAAU,sBAC5B,yBACEE,IAAI,2GACJC,IAAI,GACJH,UAAU,uBAMhB,6BAASC,GAAG,YACV,6CC3HUI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.47830597.chunk.js","sourcesContent":["import React from \"react\";\n\nconst App = () => {\n  return (\n    <div>\n      <nav>\n        <a href=\"#\" className=\"home-link\">\n          <span className=\"purple\">{`<`}</span>\n          {`ELLA `}\n          <span className=\"purple\">{`/>`}</span>\n        </a>\n        <ul className=\"nav-links\">\n          <li>\n            <a href=\"#about\">\n              {`< `}\n              <span>About </span>\n              {`/>`}\n            </a>\n          </li>\n          <li>\n            <a href=\"#projects\">\n              {`< `}\n              <span>Projects </span>\n              {`/>`}\n            </a>\n          </li>\n          <li>\n            <a href=\"#contact\">\n              {`< `}\n              <span>Contact </span>\n              {`/>`}\n            </a>\n          </li>\n        </ul>\n      </nav>\n      <main>\n        {/*Landing Section*/}\n        <section id=\"landing\">\n          <div className=\"addspace\"></div>\n          <div className=\"intro\">\n            <h1>Hello, I'm Ella.</h1>\n            <h4>I'm an aspiring web developer</h4>\n            <p className=\"intro-p\">\n              that has lived around the world but is currently settled in sunny\n              Miami. I have experience in multiple industries - modeling,\n              finance and sales - and now I like to make cool things people can\n              use on the Internet.\n            </p>\n          </div>\n          <a href=\"#about\" className=\"down-arrow arrow-1\">\n            <img\n              src=\"https://mbotaswbcw-flywheel.netdna-ssl.com/wp-content/uploads/sites/6/2019/06/white-down-arrow-png-2.png\"\n              alt=\"\"\n              className=\"down-arrow-image\"\n            />\n          </a>\n        </section>\n\n        {/*About Section*/}\n        <section id=\"about\">\n          <div className=\"about-div\">\n            <div className=\"inner-about-div\">\n              <h2>\n                {` <`}\n                <span>About</span> {`/>`}\n              </h2>\n              <div className=\"about-info\">\n                <p>It all started when I was born... Just kidding.</p>\n                <p>\n                  I've lived on four different continents during my lifetime and\n                  worked professionally since I was fifteen years old. I've worn\n                  a lot of hats - full-time student, professional model,\n                  administrative assistant at a law firm, and intern for a\n                  financial advisor. My current hat is in sales at one of the\n                  largest insurance carriers in the world.\n                </p>\n                <p>\n                  I graduated from the University of Miami with a Bachelor's in\n                  Finance. My senior year, I took a digital marketing class in\n                  which I had to build a website for a project. I used Wix, but\n                  I remember thinking to myself, \"Wouldn't it be nice if I could\n                  control ALL of this?\" And thus, my interest in coding was born\n                  and you were subsequently brought by destiny to my website. I\n                  enrolled in a fullstack engineering program and am now\n                  proficient in HTML, CSS, JavaScript, React, Node, Express, and\n                  PostgreSQL. Scroll down and you'll find my projects that\n                  showcase said proficiency.\n                </p>\n                <p className=\"center\">\n                  Other useful links for you to check out:\n                </p>\n                <div className=\"icons-div\">\n                  <div className=\"resume-div\">\n                    <img\n                      src=\"https://peopleshub.org/wp-content/uploads/2018/04/person-icon-white.png\"\n                      alt=\"resume icon\"\n                    />\n                    <a href=\"\">Resume</a>\n                  </div>\n                  <div className=\"linkedin-div\">\n                    <img\n                      src=\"https://plan2profit.ca/wp-content/uploads/2018/12/linkedin-logo-white.png\"\n                      alt=\"LinkedIn logo\"\n                    />\n                    <a\n                      href=\"https://www.linkedin.com/in/ella-horn/\"\n                      target=\"_blank\"\n                    >\n                      LinkedIn\n                    </a>\n                  </div>\n                  <div className=\"github-div\">\n                    <img\n                      src=\"https://www.sferalabs.cc/wp-content/uploads/github-logo-white.png\"\n                      alt=\"\"\n                    />\n                    <a href=\"https://github.com/ehorn24\" target=\"_blank\">\n                      GitHub\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <a href=\"#projects\" className=\"down-arrow arrow-2\">\n            <img\n              src=\"https://mbotaswbcw-flywheel.netdna-ssl.com/wp-content/uploads/sites/6/2019/06/white-down-arrow-png-2.png\"\n              alt=\"\"\n              className=\"down-arrow-image\"\n            />\n          </a>\n        </section>\n\n        {/*Projects Section*/}\n        <section id=\"projects\">\n          <h1>Projects</h1>\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./Styles/App.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}